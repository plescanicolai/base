<?php

namespace Feedify\BaseBundle\Entity\Customer\Product;

use Doctrine\DBAL\Connection;
use Doctrine\ORM\EntityRepository;

/**
 * ProductsToMarketsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 * @method findByMarketId
 */
class ProductsToMarketsRepository extends EntityRepository
{
    /**
     * @param int   $productId
     * @param array $marketsId
     * @return array
     */
    public function deleteProductToMarkets($productId, $marketsId)
    {
        $queryBuilder = $this->createQueryBuilder('pm')
            ->delete();

        $where = '1 = 1';
        if ($productId) {
            $where .= ' AND pm.product = :productId';
            $queryBuilder->setParameter('productId', $productId);
        }

        if ($marketsId) {
            $where .= ' AND pm.marketId IN (:marketsId)';
            $queryBuilder->setParameter('marketsId', $marketsId, Connection::PARAM_INT_ARRAY);
        }

        $queryBuilder->where($where);

        return $queryBuilder->getQuery()->getResult();
    }

    /**
     * @param array $productsId
     * @param array $marketsId
     * @return array
     */
    public function getByProductsId($productsId, $marketsId = array())
    {
        $queryBuilder = $this->createQueryBuilder('pm')
            ->select('pm')
            ->where('pm.product IN (:productsId)')
            ->setParameter('productsId', $productsId ?: array(0), Connection::PARAM_INT_ARRAY);

        if ($marketsId) {
            $queryBuilder->andWhere('pm.marketId IN (:marketsId)')
                ->setParameter('marketsId', $marketsId, Connection::PARAM_INT_ARRAY);
        }

        $productsToMarkets = array();
        /** @var ProductsToMarkets $productToMarket */
        foreach ($queryBuilder->getQuery()->getResult() as $productToMarket) {
            $productsToMarkets[$productToMarket->getProduct()->getId()][$productToMarket->getMarketId()] = true;
        }

        return $productsToMarkets;
    }
}
